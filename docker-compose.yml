version: '3.8'

services:
  court-fetcher:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: court-data-fetcher
    ports:
      - "5000:5000"
    environment:
      - DEBUG=True
      - PORT=5000
      - HEADLESS_BROWSER=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=sqlite:///court_data.db
    volumes:
      - ./court_data.db:/app/court_data.db
      - ./logs:/app/logs
      - ./temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL database (uncomment to use instead of SQLite)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: court-fetcher-db
  #   environment:
  #     - POSTGRES_DB=court_data
  #     - POSTGRES_USER=court_user
  #     - POSTGRES_PASSWORD=court_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Redis for caching (uncomment if using Redis)
  # redis:
  #   image: redis:7-alpine
  #   container_name: court-fetcher-redis
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

  # Optional: Nginx reverse proxy (uncomment for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: court-fetcher-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - court-fetcher
  #   restart: unless-stopped

# Optional: Named volumes (uncomment if using PostgreSQL or Redis)
# volumes:
#   postgres_data:
#   redis_data:

networks:
  default:
    name: court-fetcher-network